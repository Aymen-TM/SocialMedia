{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  mode: \"light\",\n  user: null,\n  token: null,\n  posts: []\n};\nexport var authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {\n    setMode: function setMode(state) {\n      state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\n    },\n    setLogin: function setLogin(state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: function setLogout(state) {\n      state.user = null;\n      state.token = null;\n    },\n    setFriends: function setFriends(state, action) {\n      if (state.user) {\n        state.user.friends = action.payload.friends;\n      } else {\n        console.log(\"user friends not existent :( \");\n      }\n    },\n    setPosts: function setPosts(state, action) {\n      state.posts = action.payload.posts;\n    },\n    setPost: function setPost(state, action) {\n      var updatedPosts = state.posts.map(function (post) {\n        if (post._id === action.payload.post_id) return action.payload.post;\n        return post;\n      });\n      state.posts = updatedPosts;\n    }\n  }\n});\nvar _authSlice$actions = authSlice.actions,\n  setMode = _authSlice$actions.setMode,\n  setLogin = _authSlice$actions.setLogin,\n  setLogout = _authSlice$actions.setLogout,\n  setFriends = _authSlice$actions.setFriends,\n  setPosts = _authSlice$actions.setPosts,\n  setPost = _authSlice$actions.setPost;\nexport { setMode, setLogin, setLogout, setFriends, setPosts, setPost };\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mode","user","token","posts","authSlice","name","reducers","setMode","state","setLogin","action","payload","setLogout","setFriends","friends","console","log","setPosts","setPost","updatedPosts","map","post","_id","post_id","actions","reducer"],"sources":["C:/Users/t_mus/OneDrive/Bureau/WebDev/SocialMedia/client/src/state/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState ={\r\n    mode:\"light\",\r\n    user:null,\r\n    token:null,\r\n    posts:[]\r\n};\r\n\r\nexport const authSlice= createSlice({\r\n    name:\"auth\",\r\n    initialState,\r\n    reducers:{\r\n        setMode:(state)=>{\r\n            state.mode = state.mode === \"light\" ? \"dark\" : \"light\"\r\n        },\r\n        setLogin:(state,action)=>{\r\n            state.user = action.payload.user\r\n            state.token = action.payload.token\r\n        },\r\n        setLogout:(state)=>{\r\n            state.user = null\r\n            state.token = null\r\n        },\r\n        setFriends:(state,action)=>{\r\n            if(state.user){\r\n                state.user.friends = action.payload.friends\r\n            }else{\r\n                console.log(\"user friends not existent :( \");\r\n            }\r\n        },\r\n        setPosts:(state,action)=>{\r\n            state.posts = action.payload.posts\r\n        },\r\n        setPost:(state,action)=>{\r\n            const updatedPosts = state.posts.map((post)=>{\r\n                if(post._id === action.payload.post_id) return action.payload.post\r\n                return post\r\n            })\r\n            state.posts = updatedPosts\r\n        }\r\n    }\r\n})\r\n\r\nexport const{\r\n    setMode,setLogin,setLogout,setFriends,setPosts,setPost\r\n} = authSlice.actions\r\n\r\nexport default authSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,YAAY,GAAE;EAChBC,IAAI,EAAC,OAAO;EACZC,IAAI,EAAC,IAAI;EACTC,KAAK,EAAC,IAAI;EACVC,KAAK,EAAC;AACV,CAAC;AAED,OAAO,IAAMC,SAAS,GAAEN,WAAW,CAAC;EAChCO,IAAI,EAAC,MAAM;EACXN,YAAY,EAAZA,YAAY;EACZO,QAAQ,EAAC;IACLC,OAAO,EAAC,iBAACC,KAAK,EAAG;MACbA,KAAK,CAACR,IAAI,GAAGQ,KAAK,CAACR,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IAC1D,CAAC;IACDS,QAAQ,EAAC,kBAACD,KAAK,EAACE,MAAM,EAAG;MACrBF,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;MAChCO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;IACtC,CAAC;IACDU,SAAS,EAAC,mBAACJ,KAAK,EAAG;MACfA,KAAK,CAACP,IAAI,GAAG,IAAI;MACjBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACtB,CAAC;IACDW,UAAU,EAAC,oBAACL,KAAK,EAACE,MAAM,EAAG;MACvB,IAAGF,KAAK,CAACP,IAAI,EAAC;QACVO,KAAK,CAACP,IAAI,CAACa,OAAO,GAAGJ,MAAM,CAACC,OAAO,CAACG,OAAO;MAC/C,CAAC,MAAI;QACDC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAChD;IACJ,CAAC;IACDC,QAAQ,EAAC,kBAACT,KAAK,EAACE,MAAM,EAAG;MACrBF,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO,CAACR,KAAK;IACtC,CAAC;IACDe,OAAO,EAAC,iBAACV,KAAK,EAACE,MAAM,EAAG;MACpB,IAAMS,YAAY,GAAGX,KAAK,CAACL,KAAK,CAACiB,GAAG,CAAC,UAACC,IAAI,EAAG;QACzC,IAAGA,IAAI,CAACC,GAAG,KAAKZ,MAAM,CAACC,OAAO,CAACY,OAAO,EAAE,OAAOb,MAAM,CAACC,OAAO,CAACU,IAAI;QAClE,OAAOA,IAAI;MACf,CAAC,CAAC;MACFb,KAAK,CAACL,KAAK,GAAGgB,YAAY;IAC9B;EACJ;AACJ,CAAC,CAAC;AAAA,yBAIEf,SAAS,CAACoB,OAAO;EADjBjB,OAAO,sBAAPA,OAAO;EAACE,QAAQ,sBAARA,QAAQ;EAACG,SAAS,sBAATA,SAAS;EAACC,UAAU,sBAAVA,UAAU;EAACI,QAAQ,sBAARA,QAAQ;EAACC,OAAO,sBAAPA,OAAO;AAAA;AAG1D,eAAed,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module"}